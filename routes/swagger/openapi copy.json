{
  "openapi": "3.0.1",
  "info": {
    "title": "Social Network Bekend API documentation",
    "description": "The service is hosted on a free server, so it takes some time for it to wake up. Please be patient and thank you for your attention.",
    "version": "v1.0"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://linkedinclone-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Posts",
      "description": "Posts endpoints"
    },
    {
      "name": "Comments",
      "description": "Comments endpoints"
    },
    {
      "name": "Favorite",
      "description": "Favorite endpoints"
    },
    {
      "name": "Own posts",
      "description": "Own posts endpoints"
    },
    {
      "name": "Popular",
      "description": "Popular endpoints"
    },
    {
      "name": "Search",
      "description": "Search endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration body",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "\"key\" is not allowed"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User with this email is already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "This email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "User send verification link by email",
        "parameters": [],
        "requestBody": {
          "description": "Email verification body",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificstionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful verification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "description": "Response message",
                      "example": "201"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "\"email\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Email already verified"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "\"key\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email or password is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Email/Password wrong or invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/dell": {
      "delete": {
        "tags": ["Auth"],
        "summary": "User delete",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful user termination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Sergey Nikolayovich"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234qwer"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "format": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Sergey Nikolayovich"
              }
            }
          }
        }
      },
      "EmailVerificstionRequest": {
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234qwer"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "format": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "currentUser": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "642831f346155749a2b6e944"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Sergey Nikolayovich"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },

                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar link",
                    "example": "User's avatar link"
                  }
                }
              },
              "token": {
                "type": "string",
                "description": "Session's access token (needed for all requests)",
                "format": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NTJhZGFlZGQ2MjkyZWIyMWIyZmIxNSIsImlhdCI6MTY4MzE0MTYwNCwiZXhwIjoxNjg1NjYxNjA0fQ.cOanoicelwJOE_Gsx2SEmNyQ60qOAzqURs9gvgHqf1c"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "succes"
          },
          "message": {
            "type": "string",
            "description": "User logged out",
            "example": "Logout successful"
          }
        }
      },
      "UserDeleteResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "format": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "deletedUser": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "642831f346155749a2b6e944"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Sergey Nikolayovich"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },

                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar link",
                    "example": "User's avatar link"
                  }
                }
              },
              "token": {
                "type": "string",
                "description": "Session's access token (needed for all requests)",
                "format": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NTJhZGFlZGQ2MjkyZWIyMWIyZmIxNSIsImlhdCI6MTY4MzE0MTYwNCwiZXhwIjoxNjg1NjYxNjA0fQ.cOanoicelwJOE_Gsx2SEmNyQ60qOAzqURs9gvgHqf1c"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
